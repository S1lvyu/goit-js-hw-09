{"mappings":"iiBAAA,IAOIA,EACAC,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,qBAC/BE,EAAOH,SAASC,cAAc,oBAC9BG,EAASJ,SAASC,cAAc,sBAChCI,EAAYL,SAASC,cAAc,UAWzC,SAASK,IAGP,IAFA,IAAIC,EAAmBb,EAEdc,EAAI,EAAGA,GAAKZ,EAAaY,IAChCC,EAAcD,EAAGD,GACjBA,GAAoBZ,C,CAGxB,SAASc,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEtBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAClBA,E,IAEFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACjBI,EAAA3B,GAAS4B,OAAOC,QAAQ,sBAAqCC,OAAfR,EAAS,QAAYQ,OAANJ,EAAM,M,IAEpEK,OAAM,SAAAN,G,IAAGH,EAAQG,EAARH,SAAUU,EAAKP,EAALF,MAClBI,EAAA3B,GAAS4B,OAAOK,QAAQ,qBAAoCH,OAAfR,EAAS,QAAYQ,OAANE,EAAM,M,IAIxE9B,EAAKgC,iBAAiB,UAjCtB,WACEC,MAAMC,iBACNvC,EAAawC,SAAShC,EAAMiC,OAC5BxC,EAAYuC,SAAS/B,EAAKgC,OAC1BvC,EAAcsC,SAAS9B,EAAO+B,M,IA8BhC9B,EAAU0B,iBAAiB,SAAS,WAClCb,WAAWZ,EAAkBZ,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button');\nlet delayValue;\nlet stepValue;\nlet amountValue;\nfunction getValues() {\n  event.preventDefault();\n  delayValue = parseInt(delay.value);\n  stepValue = parseInt(step.value);\n  amountValue = parseInt(amount.value);\n}\n\nfunction generatePromises() {\n  let currentStepValue = delayValue;\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, currentStepValue);\n    currentStepValue += stepValue;\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', getValues);\nsubmitBtn.addEventListener('click', () => {\n  setTimeout(generatePromises, delayValue);\n});\n"],"names":["$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$amountValue","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$generatePromises","currentStepValue","i","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","addEventListener","event","preventDefault","parseInt","value"],"version":3,"file":"03-promises.4c9d6c27.js.map"}