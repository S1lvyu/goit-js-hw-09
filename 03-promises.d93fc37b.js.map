{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,qBAC/BE,EAAOH,SAASC,cAAc,oBAC9BG,EAASJ,SAASC,cAAc,sBAChCI,EAAYL,SAASC,cAAc,UACzC,IAAIK,EACAC,EACAC,EAWJ,SAASC,IACP,IAAIC,EAAmBJ,EAEvB,IAAK,IAAIK,EAAI,EAAGA,GAAKH,EAAaG,IAChCC,EAAcD,EAAGD,GACjBA,GAAoBH,C,CAGxB,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEtBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAC1BA,EAAM,IAERU,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBC,EAAA7B,GAAS8B,OAAOC,QAAQ,sBAAsBN,QAAeG,MAAU,IAExEI,OAAM,EAACP,SAAEA,EAAUC,MAAAO,MAClBJ,EAAA7B,GAAS8B,OAAOI,QAAQ,qBAAqBT,QAAeQ,MAAU,G,CAI5E/B,EAAKiC,iBAAiB,UApCtB,WACEC,MAAMC,iBACN5B,EAAa6B,SAASjC,EAAMkC,OAC5B7B,EAAY4B,SAAShC,EAAKiC,OAC1B5B,EAAc2B,SAAS/B,EAAOgC,OAC9BC,QAAQC,IAAIhC,GACZ+B,QAAQC,IAAI/B,GACZ8B,QAAQC,IAAI9B,E,IA8BdH,EAAU2B,iBAAiB,SAAS,KAClCX,WAAWZ,EAAkBH,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button');\nlet delayValue;\nlet stepValue;\nlet amountValue;\nfunction getValues() {\n  event.preventDefault();\n  delayValue = parseInt(delay.value);\n  stepValue = parseInt(step.value);\n  amountValue = parseInt(amount.value);\n  console.log(delayValue);\n  console.log(stepValue);\n  console.log(amountValue);\n}\n\nfunction generatePromises() {\n  let currentStepValue = delayValue;\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, currentStepValue);\n    currentStepValue += stepValue;\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', getValues);\nsubmitBtn.addEventListener('click', () => {\n  setTimeout(generatePromises, delayValue);\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$generatePromises","currentStepValue","i","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","addEventListener","event","preventDefault","parseInt","value","console","log"],"version":3,"file":"03-promises.d93fc37b.js.map"}